判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。

示例 1:

输入: 121
输出: true
示例 2:

输入: -121
输出: false
解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。
示例 3:

输入: 10
输出: false
解释: 从右向左读, 为 01 。因此它不是一个回文数。
进阶:

你能不将整数转为字符串来解决这个问题吗？
核心思路为把数字的各位数分离，运用while循环进行处理
解答：
bool isPalindrome(int x){
if(x<0)//x<0时不可能为回文数
return false;
int x1=x,i=0,temp,a[20];
while(x1/10!=0){
    temp=x1%10;
    a[i++]=temp;
    x1=x1/10;
}//通过循环分离各位数并存入数组
temp=x1%10;
a[i++]=temp;
int j=0;//由于循环缺陷，需再次执行以分离最后一位数
while(j<i/2){
if(a[j]!=a[i-j-1]){
  return false;
}
  j++;
}//比较各位数是否相等
return true;
}
